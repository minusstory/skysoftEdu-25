<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="TestSQL">

	<!-- typeAlias :: Start! -->
	<typeAlias alias="tableListVO" type="egovframework.dev.test.vo.TableListVO" />
	<typeAlias alias="PagingVO" type="egovframework.dev.test.vo.PagingVO" />
	<typeAlias alias="tableListFileVO" type="egovframework.dev.test.vo.TableListFileVO"/>
	<typeAlias alias="apiVO" type="egovframework.dev.test.vo.ApiVO" />
	<typeAlias alias="memberVO" type="egovframework.dev.test.vo.MemberVO" />
<!-- 	<typeAlias alias="" type="" /> -->

	<!-- typeAlias :: End! -->

	<resultMap id="getTableListMap" class="tableListVO">
		<result property="seq" column ="SEQ" />
		<result property="title" column="TITLE"/>
		<result property="contents" column="CONTENTS"/>
		<result property="regdtm" column="REG_DTM"/>
		<result property="realfilenm" column="REAL_FILE_NM" />
		<result property="savefilenm" column="SAVE_FILE_NM" /> <!-- 추가 -->
	</resultMap>

	<!-- column은 SQL 매퍼 안에서 사용될 컬럼 이름이다. 디비의 테이블 위치와는 관련이 없다. -->

	<resultMap id="getTableListFileMap" class="tableListFileVO">
		<result property="orgseq" column="ORG_SEQ" />
		<result property="useyn" column="USE_YN"/>
		<result property="savefilenm" column="SAVE_FILE_NM"/>
		<result property="realfilenm" column="REAL_FILE_NM"/>
		<result property="regdtm" column="REG_DTM"/>
	</resultMap>

	<!-- C -->
	<insert id="TableSkyTestDAO.addBoard" parameterClass="tableListVO" >
		<selectKey keyProperty="seq" resultClass="int">
       		SELECT SEQ_SKY_TEST.NEXTVAL AS ID FROM DUAL
   		</selectKey>
		INSERT INTO TB_SKY_TEST(SEQ,TITLE,CONTENTS,REG_DTM)
		VALUES( #seq# ,  #title# , #contents# , sysdate)
	</insert>

    <insert id="TableSkyTestDAO.addAttachFile"  parameterClass="tableListFileVO">
		INSERT INTO TB_SKY_TEST_FILE(ORG_SEQ,FILE_SEQ,USE_YN,SAVE_FILE_NM,REAL_FILE_NM,REG_DTM)
		VALUES( #orgseq# , 1 , #useyn# , #savefilenm# , #realfilenm#, sysdate)
    </insert> <!-- 첨부파일 -->


	<!-- R -->
	<select id="TableSkyTestDAO.searchBoard" parameterClass="java.lang.Integer" resultMap="getTableListMap">
		SELECT 	A.* , B.REAL_FILE_NM , B.SAVE_FILE_NM
		FROM	TB_SKY_TEST A left outer join TB_SKY_TEST_FILE B on A.seq = B.org_seq
		WHERE	A.seq = #seq#
	</select>

	<!-- U -->
	<update id="TableSkyTestDAO.updateBoard" parameterClass="tableListVO">
		UPDATE  TB_SKY_TEST
		SET		TITLE = #title# , CONTENTS = #contents# , REG_DTM = sysdate
		WHERE 	SEQ = #seq#
	</update>

	<update id="TableSkyTestDAO.updateAttachFile" parameterClass="tableListFileVO">
		UPDATE  TB_SKY_TEST_FILE
		SET		SAVE_FILE_NM = #savefilenm# , REAL_FILE_NM = #realfilenm#
		WHERE 	ORG_SEQ = #orgseq#
	</update> <!-- 첨부파일 -->

	<!-- D -->
	<delete id="TableSkyTestDAO.deleteBoard" parameterClass="java.lang.Integer">
		DELETE FROM TB_SKY_TEST
		WHERE seq = #seq#
	</delete>

	<delete id="TableSkyTestDAO.deleteAttachFile" parameterClass="java.lang.Integer">
		DELETE FROM TB_SKY_TEST_FILE
		WHERE org_seq = #seq#
	</delete> <!-- 첨부파일 -->

	<!-- L -->

	<select id="TableSkyTestDAO.getTableListPlusFile" parameterClass="tableListVO" resultMap="getTableListMap">
		SELECT  a.seq, a.title , a.contents , a.reg_dtm , b.REAL_FILE_NM , b.SAVE_FILE_NM
		FROM	(SELECT aa.* , rownum rnum
					FROM
					(	SELECT *
						FROM TB_SKY_TEST
						WHERE 1=1
						<dynamic prepend="AND">
							<isNotEmpty property="itemText">
								<isEqual property="searchItem" compareValue="all">
									title like '%' || #itemText# || '%' OR contents like #itemText# || '%'
								</isEqual>
								<isEqual property="searchItem" compareValue="title">
									title like '%' || #itemText# || '%'
								</isEqual>
								<isEqual property="searchItem" compareValue="contents">
									contents like #itemText# || '%'
								</isEqual>
							</isNotEmpty>
						</dynamic>
						ORDER BY SEQ desc
					)
				 aa
				)  a left outer join TB_SKY_TEST_FILE b on a.seq = b.org_seq
		<![CDATA[ where a.rnum>=#startrow#+1 AND a.rnum<=#startrow#+#recordCountPerPage#	]]>
	</select>


	<select id="TableSkyTestDAO.getCountByObject" parameterClass="tableListVO" resultClass="java.lang.Integer" >
		SELECT	COUNT(*)
		FROM	TB_SKY_TEST
		WHERE 1=1
			<dynamic prepend="AND">
				<isNotEmpty property="itemText">
					<isEqual property="searchItem" compareValue="all">
						title like '%' || #itemText# || '%' OR contents like #itemText# || '%'
					</isEqual>
					<isEqual property="searchItem" compareValue="title">
						title like '%' || #itemText# || '%'
					</isEqual>
					<isEqual property="searchItem" compareValue="contents">
						contents like #itemText# || '%'
					</isEqual>
				</isNotEmpty>
			</dynamic>
		ORDER BY SEQ desc
	</select>


	<!-- OPENAPI -->
	<insert id="OpenApiDAO.addNews" parameterClass="apiVO">
		<selectKey keyProperty="seq" resultClass="int">
			SELECT SEQ_SKY_OPENAPI.NEXTVAL AS ID FROM DUAL
		</selectKey>
		INSERT INTO TB_SKY_OPENAPI(SEQ,TITLE,DESCRIPTION, LINK , LASTBUILDDATE)
		VALUES (#seq#,#title#,#description#,#link#,#lastBuildDate#)
	</insert>


	<select id="OpenApiDAO.getCountAll" resultClass="java.lang.Integer">
		SELECT	COUNT(*)
		FROM	TB_SKY_OPENAPI
	</select>

	<select id="OpenApiDAO.searchNews" parameterClass="java.lang.Integer" resultClass="apiVO">
		SELECT 	*
		FROM	TB_SKY_OPENAPI
		WHERE	SEQ = #seq#
	</select>

	<select id="OpenApiDAO.getNewsList" parameterClass="apiVO" resultClass="apiVO">
		SELECT  a.*
		FROM	(SELECT aa.* , rownum rnum
					FROM
					(	SELECT *
						FROM TB_SKY_OPENAPI
						WHERE 1=1
						ORDER BY SEQ desc
					)
				 aa
				)  a
		<![CDATA[ where a.rnum>=#startrow#+1 AND a.rnum<=#startrow#+#recordCountPerPage#	]]>
	</select>

	<!-- MEMBER -->
	<select id="MemberDAO.isMemberCheck" parameterClass="memberVO" resultClass="memberVO" >
		SELECT 	*
		FROM	TB_SKY_MEMBER
		WHERE	RRNUMBER = #rrnumber1#||'-'||#rrnumber2# AND NAME = #name# AND USE_YN = 'Y'
	</select>

	<select id="MemberDAO.searchMemberById" parameterClass="memberVO" resultClass="java.lang.Integer">
		SELECT 	COUNT(*)
		FROM	TB_SKY_MEMBER
		WHERE	id=#id#
	</select>

	<insert id="MemberDAO.addMember" parameterClass="memberVO" >
		INSERT INTO TB_SKY_MEMBER(NAME,RRNUMBER,ID,PASSWORD,TEL,HP,EMAIL,ZIPCODE,ADDRESS,D_ADDRESS,PROFILE,USE_YN)
		VALUES(#name#,#rrnumber1#||'-'||#rrnumber2#  , #id# , #password#,
						<dynamic >
							<isNotNull property="telFir">
								#telFir#||'-'||#telSec#||'-'||#telThr# ,
							</isNotNull>
							<isNull property="telFir">
								'' ,
							</isNull>
							<isNotNull property="hpFir">
								#hpFir#||'-'||#hpSec#||'-'||#hpThr# ,
							</isNotNull>
							<isNull property="hpFir">
								'' ,
							</isNull>
						</dynamic>
						#emailFir#||'@'||#emailSec# , #zipcode#, #address#,#d_address#,#profile#,'Y' )
<!-- 		INSERT INTO TB_SKY_MEMBER(NAME,RRNUMBER,ID,PASSWORD,TEL,HP,EMAIL,ZIPCODE,ADDRESS,D_ADDRESS,PROFILE,USE_YN) -->
<!-- 		VALUES(#name#,#rrnumber1#||'-'||#rrnumber2#  , #id# , #password#,  -->
<!-- 						#telFir#||'-'||#telSec#||'-'||#telThr# , -->
<!-- 						#hpFir#||'-'||#hpSec#||'-'||#hpThr# , -->
<!-- 						#emailFir#||'@'||#emailSec# , #zipcode#, #address#,#d_address#,#profile#,'Y' ) -->
	</insert>

	<!-- Login -->
	<select id="LoginDAO.getMember" parameterClass="memberVO" resultClass="memberVO">
		SELECT	*
		FROM	TB_SKY_MEMBER
		WHERE	id = #id#
					<dynamic prepend="AND">
						<isNotNull  property="password">
								password = #password#
						</isNotNull>
					</dynamic>
	</select>


	<!-- My Page -->
	<update id="MyPageDao.updateInfo" parameterClass="memberVO">
		UPDATE 	TB_SKY_MEMBER
		SET			PASSWORD=#password#,
						<dynamic >
							<isNotNull property="telFir">
								TEL = #telFir#||'-'||#telSec#||'-'||#telThr# ,
							</isNotNull>
							<isNull property="telFir">
								TEL = '' ,
							</isNull>
							<isNotNull property="hpFir">
								HP = #hpFir#||'-'||#hpSec#||'-'||#hpThr# ,
							</isNotNull>
							<isNull property="hpFir">
								HP = '' ,
							</isNull>
						</dynamic>
<!-- 						HP=#hpFir#||'-'||#hpSec#||'-'||#hpThr# , -->
<!-- 						TEL=#telFir#||'-'||#telSec#||'-'||#telThr# , -->
						EMAIL=#emailFir#||'@'||#emailSec# ,
						ZIPCODE=#zipcode# ,
						ADDRESS=#address# ,
						D_ADDRESS=#d_address# ,
						PROFILE=#profile#
		WHERE		id=#id#
	</update>

</sqlMap>
